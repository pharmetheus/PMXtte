% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggKMvpc.R
\name{ggKMvpc}
\alias{ggKMvpc}
\title{Title}
\usage{
ggKMvpc(
  odata,
  sdata,
  time = TIME,
  event = DV,
  iter = ITER,
  strat = NULL,
  ci = c(0.05, 0.95),
  cuminc = FALSE,
  simCol = "black",
  obsCol = "black",
  obs.size = 0.8,
  posObs = NULL,
  show.censor = TRUE,
  censor.shape = "|",
  censor.size = 4,
  palette = PMXtte:::PMXColors_pmx_palettes(),
  scale.percent = TRUE,
  ylab = paste0("Percentage with", if (!cuminc) "out", " events (\%)"),
  xlab = "Time (Weeks)",
  legend.position = "top",
  xlim = NULL,
  ylim = c(0, 1)
)
}
\arguments{
\item{odata}{the observed data with one row per subject with a time and event indicator (1==event, 0==censored)}

\item{sdata}{the simulated data with one row per subject and replicate with a time and event indicator (1==event, 0==censored)}

\item{time}{what indicates event/censoring time}

\item{event}{what indicates if an event occurred}

\item{iter}{what indicates the replicate number}

\item{strat}{character vector: what stratifications need to be applied}

\item{ci}{what level of confidence to we want for the simulated Kaplan-Meier}

\item{cuminc}{do we want to show the inverse Kaplan-Meier (1-KM) then set to TRUE, for survival-like set to FALSE}

\item{simCol}{color for the simulation interval}

\item{obsCol}{color for the observed line}

\item{obs.size}{size for the observed line}

\item{posObs}{provide an explicit set of times to smoothen the CI for simulations}

\item{show.censor}{logical to indicate whether the censoring times should be shown for the observed}

\item{censor.shape}{symbol for censored items to be passed to geom point}

\item{censor.size}{size of the censor item}

\item{palette}{palette of colors will override the simCol and obsCol arguments}

\item{scale.percent}{logical to convert y axis to percent}

\item{ylab}{Y-axis label}

\item{xlab}{X-axis label}

\item{legend.position}{the position of the legend, default 'top'}

\item{xlim}{override the limits of x axis}

\item{ylim}{override the limits of y axis}
}
\value{
a ggplot2 object
}
\description{
Title
}
\examples{
library(magrittr)
rttedata <- readr::read_csv(system.file('extdata/DAT-1c-RED-1a-PMX-WOWTTE-PFPMX-1.csv', package= 'PMXtte'), show_col_types = FALSE)
rttedata <- dplyr::filter(rttedata, EVID == 0, TYPE == 2)

# Load observed data
odata <- rttedata \%>\%
  dplyr::filter(STUDYIDN == 1) \%>\%
  dplyr::mutate(TIME = TSFDW)

# Load simulated data
sdata <- readRDS(system.file('extdata/vpcdat.rds', package= 'PMXtte'))
sdata <- sdata \%>\%
  dplyr::mutate(TIME = TIME / (24*7)) \%>\% # Time in weeks
  dplyr::group_by(ITER, ID) \%>\%
  dplyr::mutate(EVCOUNT = cumsum(DV)) \%>\% # Compute EVCOUNT
  dplyr::ungroup()

# VPC for time to first event data
odata1 <- odata \%>\% filter_xth_event(1)
sdata1 <- sdata \%>\% filter_xth_event(1)

ggKMvpc(
  odata = odata1,
  sdata = sdata1
 )

# Multiple options (stratifications, color, sizes...)
ggKMvpc(
  odata = odata1 \%>\% dplyr::rename(DOSE = DOSEN),
  sdata = sdata1,
  strat = "DOSE",
  simCol = "pink", obsCol = "red",
  palette = NULL #set NULL to palette
 )

# VPC for repeated TTE
# First option: iterate over the different event numbers
plotlist <- list()
for(i in 1:4){
plotlist[[i]] <- ggKMvpc(
  odata = odata \%>\% filter_xth_event(i, time_since_last_event=NULL),
  sdata = sdata \%>\% filter_xth_event(i, time_since_last_event=NULL)
 )
}
ggpubr::ggarrange(plotlist = plotlist)

# Second option (preferred): use RTTE as a stratification covariate
odata <- odata \%>\%
  dplyr::group_by(ID) \%>\%
  dplyr::mutate(RTTE = seq_along(DV)) \%>\% #create RTTE in obs data
  dplyr::ungroup()

ggKMvpc(
  odata = odata \%>\% dplyr::filter(RTTE <= 4), #keep a reasonable number of ID
  sdata = sdata \%>\% dplyr::filter(RTTE <= 4),
  strat = "RTTE"
 )

}
