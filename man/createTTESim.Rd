% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createTTESim.R
\name{createTTESim}
\alias{createTTESim}
\title{Create NONMEM control stream for TTE simulations based on a model file}
\usage{
createTTESim(
  modFile,
  outFile = paste0(tools::file_path_sans_ext(modFile), "vpc.mod"),
  simTabFile = paste0("vpctab", tools::file_path_sans_ext(modFile)),
  rtte = FALSE,
  mTimeResolution = 0.1,
  timeVar = "TIME",
  tempVar = "TEMP",
  idVar = "ID",
  dvVar = "DV",
  rtteVar = "RTTE",
  iCountVar = "ICOUNT",
  iterVar = "ITER",
  tmpDvVar = "TDV",
  baselineCovs = NULL,
  timeVaryingCovs = NULL,
  endTimeVar = "ENDTIME",
  mTimeCount = 1,
  filePointer = 99,
  randomSource = 2,
  randomVar = "R",
  addSimRecord = TRUE,
  removeEstRecord = TRUE,
  seed = 1234,
  nSubs = 100,
  hzdCompartment = "A(1)",
  surVar = "SUR",
  surVarError = "SURX",
  fortranOutputFormat = "E13.7",
  updateInits = TRUE,
  includeThetaComments = TRUE,
  includeTABLE = FALSE,
  replaceSUB = TRUE
)
}
\arguments{
\item{modFile}{Character string specifying the filename (and path) to the
NONMEM model file to use as a basis for the survival simulations.}

\item{outFile}{Character string specifying the filename (and path) for the
NONMEM simulation file to be written to disk. If \code{NULL}, no file is
written, and instead, the modified model code is returned as a character
vector. Default is \verb{<modFile>vpc.mod}.}

\item{simTabFile}{Character string specifying the filename for the simulation
output file (the simulated events). Default: \verb{vpctab<modFile_without_extension>}.}

\item{rtte}{Logical, indicating whether to perform repeated time-to-event
simulations (\code{TRUE}) or standard time-to-event simulations (\code{FALSE}, default).}

\item{mTimeResolution}{Numeric value specifying the minimum resolution in the
event time. Default \code{0.1} time units.}

\item{timeVar}{Character string specifying the name of the TIME column.
Default \code{"TIME"}. Used for outputting the header \code{TIME} of the event in
the \code{simTabFile} and for \code{MTIME} update.}

\item{tempVar}{Character string specifying a temporary variable name used to
update \code{MTIME}. Default \code{"TEMP"}.}

\item{idVar}{Character string specifying the name of the ID column.
Default \code{"ID"}. Used for outputting the individual ID header in the \code{simTabFile}.}

\item{dvVar}{Character string specifying the name of the DV column.
Default \code{"DV"}. Used for outputting the header in the \code{simTabFile}.}

\item{rtteVar}{Character string specifying the name of the RTTE variable.
Default \code{"RTTE"}. To be used in the code and in the header for the \code{simTabFile}.}

\item{iCountVar}{Character string specifying the name of the Individual counter.
Default \code{"ICOUNT"}. To be used as header in the \code{simTabFile}.}

\item{iterVar}{Character string specifying the name of the simulation iteration
counter. Default \code{"ITER"}. To be used in the code and header in the \code{simTabFile}.}

\item{tmpDvVar}{Character string specifying a temporary variable name.
Default \code{"TDV"}. To be used to store the DV value for output, also used as \verb{<TDV>X} in the code.}

\item{baselineCovs}{Character vector of strings for all baseline covariates
to output in the \code{simTabFile}, e.g., \code{c("BCOV1","BCOV2")}. Default \code{NULL},
i.e., no baseline covariates to output.}

\item{timeVaryingCovs}{Character vector of strings for all time-varying
covariates to output in the \code{simTabFile}, e.g., \code{c("TCOV1","TCOV2")}.
Default \code{NULL}, i.e., no time-varying covariates to output.}

\item{endTimeVar}{Character string specifying the name of the max event time
for each individual. Default \code{"ENDTIME"}. Could also be set to a specific
time (e.g., \code{"365"}), note though that the time should be less or equal to
the last record per subject.}

\item{mTimeCount}{Integer specifying the \code{MTIME} vector index to use.
Default \code{1}. Change only if multiple \code{MTIME} statements.}

\item{filePointer}{Integer specifying the Fortran file pointer to use for
\code{simTabFile}. Default \code{99}. Change only if \code{99} is already used in NONMEM
verbatim code.}

\item{randomSource}{Integer specifying the random source index for the
univariate random number. Default \code{2}. Change only if additional random
sources are used in the NONMEM code.}

\item{randomVar}{Character string specifying the random variable name to use.
Default \code{"R"}.}

\item{addSimRecord}{Logical, indicating whether a \verb{$SIMULATION} record should
be added/replaced in the code. Default \code{TRUE}.}

\item{removeEstRecord}{Logical, indicating whether the \verb{$ESTIMATION} record
should be removed from the code. Default \code{TRUE}.}

\item{seed}{Integer specifying the R seed to be used to generate the NONMEM
seeds. Default \code{1234}.}

\item{nSubs}{Integer specifying the number of simulation iterations (subproblems)
to be used.}

\item{hzdCompartment}{Character string specifying the NONMEM expression for
the hazard compartment, representing the cumulative hazard. Default \code{"A(1)"}.}

\item{surVar}{Character string specifying the survival variable name to use
in the NONMEM code. Default \code{"SUR"}.}

\item{surVarError}{Character string specifying the survival variable name to
use in the NONMEM code in \verb{$ERROR}. Default \code{"SURX"}.}

\item{fortranOutputFormat}{Character string specifying the FORTRAN output
format for the \code{simTabFile}. Default Scientific notation with 7 decimals \code{"E13.7"}.}

\item{updateInits}{Logical, indicating whether the simulation parameters
should be updated to the final estimates of the estimation. Assumes that a
\verb{<modFile>.ext} exists in the \code{modFile} path. Default \code{TRUE}.}

\item{includeThetaComments}{Logical, only applies when \code{updateInits = TRUE}.
If \code{TRUE}, tries to get the corresponding theta comments (text following
first ";") from the \code{modFile} and add to the new updated simulation
parameters. Default \code{TRUE}.}

\item{replaceSUB}{Logical, indicating whether to replace \verb{$SUBROUTINE} to
make sure it is using \code{ADVAN6}. Default \code{TRUE}.}

\item{includeTable}{Logical, indicating whether \verb{$TABLE} should be included
or not. Default \code{FALSE}.}
}
\value{
If \code{outFile} is specified, the function writes the NONMEM control
stream to the specified file and returns \code{NULL} invisibly. If \code{outFile} is
\code{NULL}, the function returns the NONMEM control stream as a character vector.
}
\description{
This function generates a NONMEM control stream file for
simulating time-to-event (TTE) or repeated time-to-event (RTTE) data
based on an existing NONMEM model file. It modifies the model file to
perform simulations, outputting simulated event times and covariates.
}
\details{
This function generates a NONMEM control stream file for simulating
time-to-event (TTE) or repeated time-to-event (RTTE) data using the MTIME
technique and is based on an existing NONMEM model file. The function
modifies (adding and revising) the model file to enable simulations and
output simulated event times and covariates. Default is to change to
subroutine ADVAN6 in the simulations since other subroutines have been
shown not to work adequately for this purpose. Note also that the created
model file may need some further manual editing, eg, in the $ERROR section
(removing Y expressions).
}
\examples{
# Example usage: RTTE with time-varying DOSEN covariate in output, not updating initial estimates
# File path to a ".mod" object (embedded in the package as an example)
mypath <- system.file("extdata", "rtte_mod.mod", package = "PMXtte")
createTTESim(modFile = mypath, rtte = TRUE, timeVaryingCovs = "DOSEN", updateInits = FALSE)

# Example usage: TTE with no covariates in output
mypath <- system.file("extdata", "tte_weibull.mod", package = "PMXtte")
createTTESim(modFile = mypath)
}
